version: 2.1

branch-master-filter: &branch-master-filter
  branches:
    only: /main/
  tags:
    ignore: /.*/

orbs:
  aws-cli: circleci/aws-cli@2.0.0

workflows:
  dev-release:
    jobs:
      # - build-and-push-image:
      #     name: Build and Publish Docker Image
      #     filters: *branch-master-filter
      #     context:
      #       - docker-hub-context
      - deploy:
          name: Deploy app to Dev
          context:
            - docker-hub-context
          # requires:
          #   - Build and Publish Docker Image

jobs:
  build-and-push-image:
    working_directory: ~/demoSpringRestDocker/demo-apirest-crud
    docker:
      - image: cimg/openjdk:14.0
    steps:
      - checkout:
          path: ~/demoSpringRestDocker
      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: false
      - run:
          name: Install Dependencies
          command: |
            mvn -v
            mvn clean install
            ls -la target/
      - run:
          name: Build Docker Image
          command: |
            TAG=0.1.$CIRCLE_BUILD_NUM
            docker login --username ${DOCKER_LOGIN} --password ${DOCKER_PASSWORD}
            docker build -t rparias/springtest:v$TAG .
            docker push rparias/springtest:v${TAG}
  deploy:
    working_directory: ~/demoSpringRestDocker/demo-apirest-crud
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout:
          path: ~/demoSpringRestDocker
      - run:
          name: Deploy
          command: |
            # 0- Install AWS CLI
            curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip"
            unzip awscli-bundle.zip
            ./awscli-bundle/install -b ~/bin/aws
            # 1- Get the public IP of the current CircleCI runner
            PUBLIC_IP=$(curl ipinfo.io/ip)
            # 2- Add an ingress rule to the security group
            ~/bin/aws ec2 authorize-security-group-ingress --region $AWS_DEFAULT_REGION --group-id $SECURITY_GROUP_ID \
              --protocol tcp --port 22 --cidr $PUBLIC_IP/24
            # 3- Give the ingress rule some time to propogate
            sleep 5
            # 4- SSH to the server to deploy
            ssh -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_PUBLIC_DNS \
            "pwd && ls -la && exit"
            # 5- Remove the ingress rule
            # ~/bin/aws ec2 revoke-security-group-ingress --region $AWS_DEFAULT_REGION --group-id $SECURITY_GROUP_ID \
            #   --protocol tcp --port 22 --cidr $PUBLIC_IP/24
            # #6- Exit
            # exit